{"ast":null,"code":"import { all, fork, call, put, take, takeEvery, takeLatest, delay } from 'redux-saga/effects'; // const addPostAPI = (data) => {\n//     return axios.post('/api/post', data);\n// }\n\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    yield put({\n      type: \"ADD_POST_SUCCESS\",\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: \"ADD_POST_FAILURE\",\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost, 2000);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost)]);\n}","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/sagas/post.js"],"names":["all","fork","call","put","take","takeEvery","takeLatest","delay","addPost","action","result","addPostAPI","data","type","err","response","watchAddPost","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,SAArC,EAAgDC,UAAhD,EAA4DC,KAA5D,QAAyE,oBAAzE,C,CAEA;AACA;AACA;;AAEA,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMR,IAAI,CAACS,UAAD,EAAaF,MAAM,CAACG,IAApB,CAAzB;AACA,UAAMT,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAE,kBADA;AAEND,MAAAA,IAAI,EAAEF,MAAM,CAACE;AAFP,KAAD,CAAT;AAIH,GAND,CAOA,OAAOE,GAAP,EAAY;AACR,UAAMX,GAAG,CAAC;AACNU,MAAAA,IAAI,EAAE,kBADA;AAEND,MAAAA,IAAI,EAAEE,GAAG,CAACC,QAAJ,CAAaH;AAFb,KAAD,CAAT;AAIH;AACJ;;AAED,UAAUI,YAAV,GAAyB;AACrB,QAAMV,UAAU,CAAC,kBAAD,EAAqBE,OAArB,EAA8B,IAA9B,CAAhB;AACH;;AAED,eAAe,UAAUS,QAAV,GAAqB;AAChC,QAAMjB,GAAG,CAAC,CACNC,IAAI,CAACe,YAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import { all, fork, call, put, take, takeEvery, takeLatest, delay } from 'redux-saga/effects';\r\n\r\n// const addPostAPI = (data) => {\r\n//     return axios.post('/api/post', data);\r\n// }\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        const result = yield call(addPostAPI, action.data);\r\n        yield put({\r\n            type: \"ADD_POST_SUCCESS\",\r\n            data: result.data,\r\n        })\r\n    }\r\n    catch (err) {\r\n        yield put({\r\n            type: \"ADD_POST_FAILURE\",\r\n            data: err.response.data,\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchAddPost() { \r\n    yield takeLatest(\"ADD_POST_REQUEST\", addPost, 2000);\r\n}\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}