{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//노예이름\nvar LOG_IN = \"LOG_IN\";\nvar LOG_OUT = \"LOG_OUT\"; //노예 생성함수\n\nexport var loginAction = function loginAction(data) {\n  return {\n    type: LOG_IN,\n    data: data\n  };\n}; //생각날때마다 추가하자 state\n\nvar initialState = {\n  user: {\n    isLoggedIn: false,\n    user: null,\n    signUpData: {},\n    loginData: {}\n  },\n  post: {\n    mainPosts: []\n  }\n}; //불변객체 -> 객체를 참조해서 수정 하면안된다. -->교체 가능 read만 가능.\n//reducer는 (이전상태,액션)=>return 다음상태로 교체\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n\n    case LOG_OUT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false\n        })\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/reducers/index.js"],"names":["LOG_IN","LOG_OUT","loginAction","data","type","initialState","user","isLoggedIn","signUpData","loginData","post","mainPosts","rootReducer","state","action"],"mappings":";;;;;;AACA;AACA,IAAMA,MAAM,GAAG,QAAf;AACA,IAAMC,OAAO,GAAG,SAAhB,C,CAEA;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD;AAAA,SAAW;AAAEC,IAAAA,IAAI,EAAEJ,MAAR;AAAgBG,IAAAA,IAAI,EAAJA;AAAhB,GAAX;AAAA,CAApB,C,CAEP;;AACA,IAAME,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,KADV;AAEFD,IAAAA,IAAI,EAAE,IAFJ;AAGFE,IAAAA,UAAU,EAAE,EAHV;AAIFC,IAAAA,SAAS,EAAE;AAJT,GADW;AAOjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE;AADT;AAPW,CAArB,C,CAYA;AACA;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AAClD,UAAQA,MAAM,CAACV,IAAf;AACI,SAAKJ,MAAL;AACI,6CACOa,KADP;AAEIP,QAAAA,IAAI,kCACGO,KAAK,CAACP,IADT;AAEAC,UAAAA,UAAU,EAAE,IAFZ;AAGAD,UAAAA,IAAI,EAAEQ,MAAM,CAACX;AAHb;AAFR;;AAQJ,SAAKF,OAAL;AACI,6CACOY,KADP;AAEIP,QAAAA,IAAI,kCACGO,KAAK,CAACP,IADT;AAEAC,UAAAA,UAAU,EAAE;AAFZ;AAFR;AAXR;AAmBH,CApBD;;AAqBA,eAAeK,WAAf","sourcesContent":["\r\n//노예이름\r\nconst LOG_IN = \"LOG_IN\";\r\nconst LOG_OUT = \"LOG_OUT\";\r\n\r\n//노예 생성함수\r\nexport const loginAction = (data) => ({ type: LOG_IN, data });\r\n\r\n//생각날때마다 추가하자 state\r\nconst initialState = {\r\n    user: {\r\n        isLoggedIn: false,\r\n        user: null,\r\n        signUpData: {},\r\n        loginData: {},\r\n    },\r\n    post: {\r\n        mainPosts: [],\r\n    }\r\n}\r\n\r\n//불변객체 -> 객체를 참조해서 수정 하면안된다. -->교체 가능 read만 가능.\r\n//reducer는 (이전상태,액션)=>return 다음상태로 교체\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOG_IN:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    isLoggedIn: true,\r\n                    user: action.data,\r\n                }\r\n            }\r\n        case LOG_OUT:\r\n            return {\r\n                ...state,\r\n                user: {\r\n                    ...state.user,\r\n                    isLoggedIn: false,\r\n                }\r\n            }\r\n    }\r\n};\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}