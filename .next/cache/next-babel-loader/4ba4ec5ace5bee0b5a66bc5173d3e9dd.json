{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlals\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\node-bird\\\\components\\\\followingList.jsx\";\nimport React, { useCallback, useMemo } from 'react';\nimport { List, Button, Card } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { StopOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListItems = styled(List)`\n    margin-bottom: 20px;\n`;\n\nconst FollowingList = ({\n  header,\n  data\n}) => {\n  //리액트에서 배열안에 jsx 사용시 key 값 필수\n  //리액트에서 컴포넌트의 props 에 함수로 들어가는 것은 useCallback 으로 최적화 해주자.\n  const renderItem = useCallback(item => /*#__PURE__*/_jsxDEV(List.Item, {\n    style: {\n      marginTop: 20\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      actions: [/*#__PURE__*/_jsxDEV(StopOutlined, {}, \"stop\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 29\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        description: item.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this));\n  const divStyle = useMemo(() => ({\n    textAlign: \"center\",\n    margin: \"10px 0\"\n  }), []);\n  return /*#__PURE__*/_jsxDEV(ListItems, {\n    grid: {\n      gutter: 4,\n      xs: 1,\n      md: 3\n    },\n    size: \"small\",\n    header: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, this),\n    loadMore: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\uB354\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }, this),\n    bordered: true,\n    dataSource: data,\n    renderItem: renderItem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\nFollowingList.propTypes = {\n  header: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired\n};\nexport default FollowingList;","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/components/followingList.jsx"],"names":["React","useCallback","useMemo","List","Button","Card","PropTypes","StopOutlined","styled","ListItems","FollowingList","header","data","renderItem","item","marginTop","nickname","divStyle","textAlign","margin","gutter","xs","md","propTypes","string","isRequired","array"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,MAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AACA,MAAMC,SAAS,GAAGD,MAAM,CAACL,IAAD,CAAO;AAC/B;AACA,CAFA;;AAGA,MAAMO,aAAa,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAsB;AACxC;AACA;AACA,QAAMC,UAAU,GAAGZ,WAAW,CAACa,IAAI,iBAC/B,QAAC,IAAD,CAAM,IAAN;AAAW,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KAAlB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAE,cAAC,QAAC,YAAD,MAAkB,MAAlB;AAAA;AAAA;AAAA;AAAA,cAAD,CAAf;AAAA,6BACI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,WAAW,EAAED,IAAI,CAACE;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAD0B,CAA9B;AAOA,QAAMC,QAAQ,GAAGf,OAAO,CAAC,OAAO;AAAEgB,IAAAA,SAAS,EAAE,QAAb;AAAuBC,IAAAA,MAAM,EAAE;AAA/B,GAAP,CAAD,EAAoD,EAApD,CAAxB;AACA,sBACI,QAAC,SAAD;AACI,IAAA,IAAI,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,EAAE,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KADV;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,MAAM,eAAE;AAAA,gBAAMX;AAAN;AAAA;AAAA;AAAA;AAAA,YAHZ;AAII,IAAA,QAAQ,eAAE;AAAK,MAAA,KAAK,EAAEM,QAAZ;AAAA,6BAAsB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,YAJd;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,UAAU,EAAEL,IANhB;AAOI,IAAA,UAAU,EAAEC;AAPhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAtBD;;AAuBAH,aAAa,CAACa,SAAd,GAA0B;AACtBZ,EAAAA,MAAM,EAAEL,SAAS,CAACkB,MAAV,CAAiBC,UADH;AAEtBb,EAAAA,IAAI,EAAEN,SAAS,CAACoB,KAAV,CAAgBD;AAFA,CAA1B;AAKA,eAAef,aAAf","sourcesContent":["import React, { useCallback, useMemo } from 'react';\r\nimport { List, Button, Card } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport { StopOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nconst ListItems = styled(List)`\r\n    margin-bottom: 20px;\r\n`\r\nconst FollowingList = ({ header, data }) => {\r\n    //리액트에서 배열안에 jsx 사용시 key 값 필수\r\n    //리액트에서 컴포넌트의 props 에 함수로 들어가는 것은 useCallback 으로 최적화 해주자.\r\n    const renderItem = useCallback(item => (\r\n        <List.Item style={{ marginTop: 20 }}>\r\n            <Card actions={[<StopOutlined key=\"stop\" />]}>\r\n                <Card.Meta description={item.nickname} />\r\n            </Card>\r\n        </List.Item>\r\n    ));\r\n    const divStyle = useMemo(() => ({ textAlign: \"center\", margin: \"10px 0\" }), []);\r\n    return (\r\n        <ListItems\r\n            grid={{ gutter: 4, xs: 1, md: 3 }}\r\n            size=\"small\"\r\n            header={<div>{header}</div>}\r\n            loadMore={<div style={divStyle}><Button>더보기</Button></div>}\r\n            bordered\r\n            dataSource={data}\r\n            renderItem={renderItem}\r\n        />\r\n    )\r\n}\r\nFollowingList.propTypes = {\r\n    header: PropTypes.string.isRequired,\r\n    data: PropTypes.array.isRequired\r\n}\r\n\r\nexport default FollowingList;"]},"metadata":{},"sourceType":"module"}