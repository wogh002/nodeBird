{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlals\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\node-bird\\\\components\\\\postCard.jsx\";\nimport React from 'react';\nimport { Card, Button, Popover } from \"antd\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from './postImages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  //me?.id; 옵셔널체이닝 문법 me && me.id 동일 없으면 undefined 들어감\n  const id = useSelector(({\n    user\n  }) => {\n    var _user$me;\n\n    return (_user$me = user.me) === null || _user$me === void 0 ? void 0 : _user$me.id;\n  }); //내가 로그인 한 상태라면 me 가 존재.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0].src && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 48\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(HeartOutlined, {}, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: () => /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\nPostCard.propTypes = {\n  //속성 자세하게 적어줄경우 shape 사용하자\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    User: PropTypes.object,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    //객체들의 배열 arrayOf\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/components/postCard.jsx"],"names":["React","Card","Button","Popover","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","useSelector","PropTypes","Avatar","PostImages","PostCard","post","id","user","me","Images","src","User","nickname","content","propTypes","shape","number","string","object","arrayOf","Comments","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,QAAsC,MAAtC;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,eAA1C,EAA2DC,eAA3D,QAAkF,mBAAlF;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC3B;AACA,QAAMC,EAAE,GAAGN,WAAW,CAAC,CAAC;AAAEO,IAAAA;AAAF,GAAD;AAAA;;AAAA,uBAAcA,IAAI,CAACC,EAAnB,6CAAc,SAASF,EAAvB;AAAA,GAAD,CAAtB,CAF2B,CAG3B;;AACA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,KAAK,EAAED,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeC,GAAf,iBAAsB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEL,IAAI,CAACI;AAAzB;AAAA;AAAA;AAAA;AAAA,cAAnC;AACI,MAAA,OAAO,EAAE,cACL,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,cADK,eAEL,QAAC,aAAD,MAAmB,OAAnB;AAAA;AAAA;AAAA;AAAA,cAFK,eAGL,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,cAHK,eAIL,QAAC,OAAD;AAAoB,QAAA,OAAO,EACvB,mBACI,QAAC,MAAD,CAAQ,KAAR;AAAA,oBAEQH,EAAE,IAAID,IAAI,CAACM,IAAL,CAAUL,EAAV,KAAiBA,EAAvB,gBACI;AAAA,oCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,0BADJ,gBAKM,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPd;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA,+BAcI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAdJ,SAAa,MAAb;AAAA;AAAA;AAAA;AAAA,cAJK,CADb;AAAA,6BAuBI,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,MAAM,eAAE,QAAC,MAAD;AAAA,oBAASD,IAAI,CAACM,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,gBADZ;AAEI,QAAA,KAAK,EAAEP,IAAI,CAACM,IAAL,CAAUC,QAFrB;AAGI,QAAA,WAAW,EAAEP,IAAI,CAACQ;AAHtB;AAAA;AAAA;AAAA;AAAA;AAvBJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCH,CAvCD;;AAwCAT,QAAQ,CAACU,SAAT,GAAqB;AACjB;AACAT,EAAAA,IAAI,EAAEJ,SAAS,CAACc,KAAV,CAAgB;AAClBT,IAAAA,EAAE,EAAEL,SAAS,CAACe,MADI;AAElBH,IAAAA,OAAO,EAAEZ,SAAS,CAACgB,MAFD;AAGlBN,IAAAA,IAAI,EAAEV,SAAS,CAACiB,MAHE;AAIlBT,IAAAA,MAAM,EAAER,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACiB,MAA5B,CAJU;AAKlB;AACAE,IAAAA,QAAQ,EAAEnB,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACiB,MAA5B;AANQ,GAAhB,EAOHG;AATc,CAArB;AAWA,eAAejB,QAAf","sourcesContent":["import React from 'react';\r\nimport { Card, Button, Popover } from \"antd\";\r\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport PostImages from './postImages';\r\n\r\nconst PostCard = ({ post }) => {\r\n    //me?.id; 옵셔널체이닝 문법 me && me.id 동일 없으면 undefined 들어감\r\n    const id = useSelector(({ user }) => user.me?.id);\r\n    //내가 로그인 한 상태라면 me 가 존재.\r\n    return (\r\n        <div>\r\n            <Card cover={post.Images[0].src && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    <HeartOutlined key=\"heart\" />,\r\n                    <MessageOutlined key=\"comment\" />,\r\n                    <Popover key=\"more\" content={\r\n                        () => (\r\n                            <Button.Group>\r\n                                {\r\n                                    id && post.User.id === id ?\r\n                                        <>\r\n                                            <Button>수정</Button>\r\n                                            <Button type=\"danger\">삭제</Button>\r\n                                        </>\r\n                                        : <Button>신고</Button>\r\n                                }\r\n                            </Button.Group>\r\n                        )\r\n                    }>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={post.content}\r\n                />\r\n            </Card>\r\n            {/* <CommentForm />\r\n            <Comments /> */}\r\n        </div>\r\n    )\r\n}\r\nPostCard.propTypes = {\r\n    //속성 자세하게 적어줄경우 shape 사용하자\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        content: PropTypes.string,\r\n        User: PropTypes.object,\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n        //객체들의 배열 arrayOf\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}