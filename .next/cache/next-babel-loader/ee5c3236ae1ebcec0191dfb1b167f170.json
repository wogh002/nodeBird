{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { compose, createStore } from \"redux\";\nimport rootReducer from \"../reducers\"; //react에 redux를 붙이는건 react app에서는 단 하나의 redux store만 존재하므로 어렵지 않다.\n//Next.js는 유저가 요청할때마다 redux store를 새로 생성한다.\n\nvar configureStore = function configureStore() {\n  var store = createStore(rootReducer, compose(applyMiddleware(thunk), window.devToolsExtension ? window.devToolsExtension() : function (f) {\n    return f;\n  }));\n  return store;\n}; //createWrapper => next의 라이프사이클에 redux를 결합 시키는 역할\n\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/store/configureStore.js"],"names":["createWrapper","compose","createStore","rootReducer","configureStore","store","applyMiddleware","thunk","window","devToolsExtension","f","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,OAArC;AACA,OAAOC,WAAP,MAAwB,aAAxB,C,CACA;AACA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,KAAK,GAAGH,WAAW,CAACC,WAAD,EAAcF,OAAO,CAACK,eAAe,CAACC,KAAD,CAAhB,EAC1CC,MAAM,CAACC,iBAAP,GAA2BD,MAAM,CAACC,iBAAP,EAA3B,GAAwD,UAAAC,CAAC;AAAA,WAAIA,CAAJ;AAAA,GADf,CAArB,CAAzB;AAEA,SAAOL,KAAP;AACH,CAJD,C,CAMA;;;AACA,IAAMM,OAAO,GAAGX,aAAa,CAACI,cAAD,EAAiB;AAC1CQ,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { compose, createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\n//react에 redux를 붙이는건 react app에서는 단 하나의 redux store만 존재하므로 어렵지 않다.\r\n//Next.js는 유저가 요청할때마다 redux store를 새로 생성한다.\r\nconst configureStore = () => {\r\n    const store = createStore(rootReducer, compose(applyMiddleware(thunk),\r\n        window.devToolsExtension ? window.devToolsExtension() : f => f));\r\n    return store;\r\n}\r\n\r\n//createWrapper => next의 라이프사이클에 redux를 결합 시키는 역할\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}