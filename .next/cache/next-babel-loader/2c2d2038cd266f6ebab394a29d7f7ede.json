{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//노예이름\nconst LOG_IN = \"LOG_IN\";\nconst LOG_OUT = \"LOG_OUT\"; //노예 생성함수\n\nexport const loginAction = data => ({\n  type: LOG_IN,\n  data\n});\nexport const logoutAction = () => ({\n  type: LOG_OUT\n});\nexport const initalState = {\n  isLoggedIn: false,\n  user: null,\n  signUpData: {},\n  loginData: {}\n};\n\nconst reducer = (state = initalState, action) => {\n  switch (action.type) {\n    case LOG_IN:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: true,\n        user: action.data\n      });\n\n    case LOG_OUT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggedIn: false,\n        user: null\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/reducers/user.js"],"names":["LOG_IN","LOG_OUT","loginAction","data","type","logoutAction","initalState","isLoggedIn","user","signUpData","loginData","reducer","state","action"],"mappings":";;;;;;AAAA;AACA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,OAAO,GAAG,SAAhB,C,CAEA;;AACA,OAAO,MAAMC,WAAW,GAAIC,IAAD,KAAW;AAAEC,EAAAA,IAAI,EAAEJ,MAAR;AAAgBG,EAAAA;AAAhB,CAAX,CAApB;AACP,OAAO,MAAME,YAAY,GAAG,OAAO;AAAED,EAAAA,IAAI,EAAEH;AAAR,CAAP,CAArB;AAEP,OAAO,MAAMK,WAAW,GAAG;AACvBC,EAAAA,UAAU,EAAE,KADW;AAEvBC,EAAAA,IAAI,EAAE,IAFiB;AAGvBC,EAAAA,UAAU,EAAE,EAHW;AAIvBC,EAAAA,SAAS,EAAE;AAJY,CAApB;;AAOP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,WAAT,EAAsBO,MAAtB,KAAiC;AAC7C,UAAQA,MAAM,CAACT,IAAf;AACI,SAAKJ,MAAL;AACI,6CACOY,KADP;AAEIL,QAAAA,UAAU,EAAE,IAFhB;AAGIC,QAAAA,IAAI,EAAEK,MAAM,CAACV;AAHjB;;AAKJ,SAAKF,OAAL;AACI,6CACOW,KADP;AAEIL,QAAAA,UAAU,EAAE,KAFhB;AAGIC,QAAAA,IAAI,EAAE;AAHV;;AAKJ;AAAS,aAAOI,KAAP;AAbb;AAeH,CAhBD;;AAiBA,eAAeD,OAAf","sourcesContent":["//노예이름\r\nconst LOG_IN = \"LOG_IN\";\r\nconst LOG_OUT = \"LOG_OUT\";\r\n\r\n//노예 생성함수\r\nexport const loginAction = (data) => ({ type: LOG_IN, data });\r\nexport const logoutAction = () => ({ type: LOG_OUT });\r\n\r\nexport const initalState = {\r\n    isLoggedIn: false,\r\n    user: null,\r\n    signUpData: {},\r\n    loginData: {},\r\n}\r\n\r\nconst reducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case LOG_IN:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                user: action.data,\r\n            }\r\n        case LOG_OUT:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null,\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}