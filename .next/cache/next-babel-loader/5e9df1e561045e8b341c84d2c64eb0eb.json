{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dlals\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\node-bird\\\\components\\\\commentForm.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport useInput from '../hooks/useInput';\nimport { Form, Input, Button } from \"antd\";\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1];\n\n  var id = useSelector(function (_ref2) {\n    var _user$me;\n\n    var user = _ref2.user;\n    return (_user$me = user.me) === null || _user$me === void 0 ? void 0 : _user$me.id;\n  });\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n  }, [commentText]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onFinish: onSubmitComment,\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      style: {\n        position: \"relative\",\n        margin: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input.TextArea, {\n        value: commentText,\n        onChange: onChangeCommentText,\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"\\uC090\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(CommentForm, \"QyAqT2Fwo+W3oQKEhjpsMmbWRJM=\", false, function () {\n  return [useInput, useSelector];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/components/commentForm.jsx"],"names":["React","useCallback","useInput","Form","Input","Button","PropTypes","useSelector","CommentForm","post","commentText","onChangeCommentText","id","user","me","onSubmitComment","console","log","position","margin","propTypes","object","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;;;AACA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAC9B,kBAA2CP,QAAQ,CAAC,EAAD,CAAnD;AAAA;AAAA,MAAOQ,WAAP;AAAA,MAAoBC,mBAApB;;AACA,MAAMC,EAAE,GAAGL,WAAW,CAAC;AAAA;;AAAA,QAAGM,IAAH,SAAGA,IAAH;AAAA,uBAAcA,IAAI,CAACC,EAAnB,6CAAc,SAASF,EAAvB;AAAA,GAAD,CAAtB;AACA,MAAMG,eAAe,GAAGd,WAAW,CAAC,YAAM;AACtCe,IAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACG,EAAjB,EAAqBF,WAArB;AACH,GAFkC,EAEhC,CAACA,WAAD,CAFgC,CAAnC;AAGA,sBACI,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEK,eAAhB;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,KAAK,EAAE;AAAEG,QAAAA,QAAQ,EAAE,UAAZ;AAAwBC,QAAAA,MAAM,EAAE;AAAhC,OAAlB;AAAA,8BACI,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,KAAK,EAAET,WAAvB;AAAoC,QAAA,QAAQ,EAAEC,mBAA9C;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CAdD;;GAAMH,W;UACyCN,Q,EAChCK,W;;;KAFTC,W;AAeNA,WAAW,CAACY,SAAZ,GAAwB;AACpBX,EAAAA,IAAI,EAAEH,SAAS,CAACe,MAAV,CAAiBC;AADH,CAAxB;AAGA,eAAed,WAAf","sourcesContent":["import React, { useCallback } from 'react';\r\nimport useInput from '../hooks/useInput';\r\nimport { Form, Input, Button } from \"antd\";\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nconst CommentForm = ({ post }) => {\r\n    const [commentText, onChangeCommentText] = useInput('');\r\n    const id = useSelector(({ user }) => user.me?.id);\r\n    const onSubmitComment = useCallback(() => {\r\n        console.log(post.id, commentText);\r\n    }, [commentText]);\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{ position: \"relative\", margin: 0 }}>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4} />\r\n                <Button type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n};\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired\r\n}\r\nexport default CommentForm;"]},"metadata":{},"sourceType":"module"}