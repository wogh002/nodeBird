{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dlals\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\node-bird\\\\components\\\\followingList.jsx\",\n    _templateObject,\n    _templateObject2,\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo } from 'react';\nimport { List, Button, Card } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { StopOutlined } from '@ant-design/icons';\nimport styled, { css } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ListItems = styled(List)(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    margin-bottom: 20px;\\n\"])));\n_c = ListItems;\nvar ListItem = styled(List.Item)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    margin-top: 20px;\\n\"])));\n_c2 = ListItem;\n\nvar FollowingList = function FollowingList(_ref) {\n  _s();\n\n  var header = _ref.header,\n      data = _ref.data;\n  //리액트에서 배열안에 jsx 사용시 key 값 필수\n  //리액트에서 컴포넌트의 props 에 함수로 들어가는 것은 useCallback 으로 최적화 해주자.\n  var renderItem = useCallback(function (item) {\n    return /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        actions: [/*#__PURE__*/_jsxDEV(StopOutlined, {}, \"stop\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 29\n        }, _this)],\n        children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n          description: item.nickname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, _this);\n  });\n  var buttonWrapper = useMemo(function () {\n    return {\n      textAlign: \"center\",\n      margin: \"10px 0\"\n    };\n  }, []);\n  var grid = useMemo(function () {\n    return {\n      gutter: 4,\n      xs: 1,\n      md: 3\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ListItems, {\n    grid: grid,\n    size: \"small\",\n    header: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, _this),\n    loadMore: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        children: \"\\uB354\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 28\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }, _this),\n    bordered: true,\n    dataSource: data,\n    renderItem: renderItem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(FollowingList, \"365aalfNPj0rn0VIjTTpEFmotBg=\");\n\n_c3 = FollowingList;\nFollowingList.propTypes = {\n  header: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired\n};\nexport default FollowingList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ListItems\");\n$RefreshReg$(_c2, \"ListItem\");\n$RefreshReg$(_c3, \"FollowingList\");","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/components/followingList.jsx"],"names":["React","useCallback","useMemo","List","Button","Card","PropTypes","StopOutlined","styled","css","ListItems","ListItem","Item","FollowingList","header","data","renderItem","item","nickname","buttonWrapper","textAlign","margin","grid","gutter","xs","md","propTypes","string","isRequired","array"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,MAAnC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;;AACA,IAAMC,SAAS,GAAGF,MAAM,CAACL,IAAD,CAAT,iGAAf;KAAMO,S;AAIN,IAAMC,QAAQ,GAAGH,MAAM,CAACL,IAAI,CAACS,IAAN,CAAT,gGAAd;MAAMD,Q;;AAGN,IAAME,aAAa,GAAG,SAAhBA,aAAgB,OAAsB;AAAA;;AAAA,MAAnBC,MAAmB,QAAnBA,MAAmB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACxC;AACA;AACA,MAAMC,UAAU,GAAGf,WAAW,CAAC,UAAAgB,IAAI;AAAA,wBAC/B,QAAC,QAAD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,OAAO,EAAE,cAAC,QAAC,YAAD,MAAkB,MAAlB;AAAA;AAAA;AAAA;AAAA,iBAAD,CAAf;AAAA,+BACI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,WAAW,EAAEA,IAAI,CAACC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAD+B;AAAA,GAAL,CAA9B;AAOA,MAAMC,aAAa,GAAGjB,OAAO,CAAC;AAAA,WAAO;AAAEkB,MAAAA,SAAS,EAAE,QAAb;AAAuBC,MAAAA,MAAM,EAAE;AAA/B,KAAP;AAAA,GAAD,EAAoD,EAApD,CAA7B;AACA,MAAMC,IAAI,GAAGpB,OAAO,CAAC;AAAA,WAAO;AAAEqB,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,EAAE,EAAE,CAAjB;AAAoBC,MAAAA,EAAE,EAAE;AAAxB,KAAP;AAAA,GAAD,EAAsC,EAAtC,CAApB;AACA,sBACI,QAAC,SAAD;AACI,IAAA,IAAI,EAAEH,IADV;AAEI,IAAA,IAAI,EAAC,OAFT;AAGI,IAAA,MAAM,eAAE;AAAA,gBAAMR;AAAN;AAAA;AAAA;AAAA;AAAA,aAHZ;AAII,IAAA,QAAQ,eAAE;AAAA,6BAAK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,aAJd;AAKI,IAAA,QAAQ,MALZ;AAMI,IAAA,UAAU,EAAEC,IANhB;AAOI,IAAA,UAAU,EAAEC;AAPhB;AAAA;AAAA;AAAA;AAAA,WADJ;AAWH,CAvBD;;GAAMH,a;;MAAAA,a;AAwBNA,aAAa,CAACa,SAAd,GAA0B;AACtBZ,EAAAA,MAAM,EAAER,SAAS,CAACqB,MAAV,CAAiBC,UADH;AAEtBb,EAAAA,IAAI,EAAET,SAAS,CAACuB,KAAV,CAAgBD;AAFA,CAA1B;AAKA,eAAef,aAAf","sourcesContent":["import React, { useCallback, useMemo } from 'react';\r\nimport { List, Button, Card } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport { StopOutlined } from '@ant-design/icons';\r\nimport styled, { css } from 'styled-components';\r\nconst ListItems = styled(List)`\r\n    margin-bottom: 20px;\r\n`\r\n\r\nconst ListItem = styled(List.Item)`\r\n    margin-top: 20px;\r\n`\r\nconst FollowingList = ({ header, data }) => {\r\n    //리액트에서 배열안에 jsx 사용시 key 값 필수\r\n    //리액트에서 컴포넌트의 props 에 함수로 들어가는 것은 useCallback 으로 최적화 해주자.\r\n    const renderItem = useCallback(item => (\r\n        <ListItem>\r\n            <Card actions={[<StopOutlined key=\"stop\" />]}>\r\n                <Card.Meta description={item.nickname} />\r\n            </Card>\r\n        </ListItem>\r\n    ));\r\n    const buttonWrapper = useMemo(() => ({ textAlign: \"center\", margin: \"10px 0\" }), []);\r\n    const grid = useMemo(() => ({ gutter: 4, xs: 1, md: 3 }), [])\r\n    return (\r\n        <ListItems\r\n            grid={grid}\r\n            size=\"small\"\r\n            header={<div>{header}</div>}\r\n            loadMore={<div><Button>더보기</Button></div>}\r\n            bordered\r\n            dataSource={data}\r\n            renderItem={renderItem}\r\n        />\r\n    )\r\n}\r\nFollowingList.propTypes = {\r\n    header: PropTypes.string.isRequired,\r\n    data: PropTypes.array.isRequired\r\n}\r\n\r\nexport default FollowingList;"]},"metadata":{},"sourceType":"module"}