{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"../reducers\"; //react에 redux를 붙이는건 react app에서는 단 하나의 redux store만 존재하므로 어렵지 않다.\n//Next.js는 유저가 요청할때마다 redux store를 새로 생성한다.\n\nvar configureStore = function configureStore() {\n  var store = createStore(rootReducer);\n  store.dispatch({\n    type: \"CHANGE_NICKNAME\",\n    data: \"boogicho\"\n  });\n  return store;\n}; //createWrapper => next의 라이프사이클에 redux를 결합 시키는 역할\n\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/store/configureStore.js"],"names":["createWrapper","createStore","rootReducer","configureStore","store","dispatch","type","data","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,WAAP,MAAwB,aAAxB,C,CACA;AACA;;AACA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,MAAMC,KAAK,GAAGH,WAAW,CAACC,WAAD,CAAzB;AACAE,EAAAA,KAAK,CAACC,QAAN,CAAe;AACXC,IAAAA,IAAI,EAAE,iBADK;AAEXC,IAAAA,IAAI,EAAE;AAFK,GAAf;AAIA,SAAOH,KAAP;AACH,CAPD,C,CASA;;;AACA,IAAMI,OAAO,GAAGR,aAAa,CAACG,cAAD,EAAiB;AAC1CM,EAAAA,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\n//react에 redux를 붙이는건 react app에서는 단 하나의 redux store만 존재하므로 어렵지 않다.\r\n//Next.js는 유저가 요청할때마다 redux store를 새로 생성한다.\r\nconst configureStore = () => {\r\n    const store = createStore(rootReducer);\r\n    store.dispatch({\r\n        type: \"CHANGE_NICKNAME\",\r\n        data: \"boogicho\",\r\n    })\r\n    return store;\r\n}\r\n\r\n//createWrapper => next의 라이프사이클에 redux를 결합 시키는 역할\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;"]},"metadata":{},"sourceType":"module"}