{"ast":null,"code":"import { all, fork, call, put, take, takeEvery, takeLatest, delay } from 'redux-saga/effects';\nimport shortid from 'shortid';\nimport { ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE } from '../reducers/post';\nimport { ADD_POST_TO_ME } from '../reducers/user'; // const addPostAPI = (data) => {\n//     return axios.post('/api/post', data);\n// }\n// const addCommentAPI = (data) => {\n//     return axios.post('/api/post/${data.postId}/comment', data);\n// }\n\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI, action.data);\n    const id = shortid.generate();\n    yield delay(1000);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: action.data //더미 data :data!\n\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI, action.data);\n    yield delay(1000);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      //더미 data :data!\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\n\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchAddComment)]);\n}","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/sagas/post.js"],"names":["all","fork","call","put","take","takeEvery","takeLatest","delay","shortid","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","ADD_POST_TO_ME","addPost","action","id","generate","type","data","err","error","response","addComment","watchAddPost","watchAddComment","postSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,SAArC,EAAgDC,UAAhD,EAA4DC,KAA5D,QAAyE,oBAAzE;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SACIC,gBADJ,EACsBC,gBADtB,EACwCC,gBADxC,EAEIC,mBAFJ,EAEyBC,mBAFzB,EAE8CC,mBAF9C,QAGO,kBAHP;AAIA,SAASC,cAAT,QAA+B,kBAA/B,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACtB,MAAI;AACA;AACA,UAAMC,EAAE,GAACV,OAAO,CAACW,QAAR,EAAT;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMJ,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAAEV,gBADA;AAENW,MAAAA,IAAI,EAAEJ,MAAM,CAACI,IAFP,CAGN;;AAHM,KAAD,CAAT;AAKA,UAAMlB,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAAEL,cADA;AAENM,MAAAA,IAAI,EAAEJ,MAAM,CAACI;AAFP,KAAD,CAAT;AAIH,GAbD,CAcA,OAAOC,GAAP,EAAY;AACR,UAAMnB,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAAET,gBADA;AAENY,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaH;AAFd,KAAD,CAAT;AAIH;AACJ;;AACD,UAAUI,UAAV,CAAqBR,MAArB,EAA6B;AACzB,MAAI;AACA;AACA,UAAMV,KAAK,CAAC,IAAD,CAAX;AACA,UAAMJ,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAAEP,mBADA;AAEN;AACAQ,MAAAA,IAAI,EAAEJ,MAAM,CAACI;AAHP,KAAD,CAAT;AAKH,GARD,CASA,OAAOC,GAAP,EAAY;AACR,UAAMnB,GAAG,CAAC;AACNiB,MAAAA,IAAI,EAAEN,mBADA;AAENS,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaH;AAFd,KAAD,CAAT;AAIH;AACJ;;AACD,UAAUK,YAAV,GAAyB;AACrB,QAAMpB,UAAU,CAACG,gBAAD,EAAmBO,OAAnB,CAAhB;AACH;;AACD,UAAUW,eAAV,GAA4B;AACxB,QAAMrB,UAAU,CAACM,mBAAD,EAAsBa,UAAtB,CAAhB;AACH;;AACD,eAAe,UAAUG,QAAV,GAAqB;AAChC,QAAM5B,GAAG,CAAC,CACNC,IAAI,CAACyB,YAAD,CADE,EAENzB,IAAI,CAAC0B,eAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { all, fork, call, put, take, takeEvery, takeLatest, delay } from 'redux-saga/effects';\r\nimport shortid from 'shortid';\r\nimport {\r\n    ADD_POST_REQUEST, ADD_POST_SUCCESS, ADD_POST_FAILURE,\r\n    ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE\r\n} from '../reducers/post';\r\nimport { ADD_POST_TO_ME } from '../reducers/user';\r\n\r\n// const addPostAPI = (data) => {\r\n//     return axios.post('/api/post', data);\r\n// }\r\n// const addCommentAPI = (data) => {\r\n//     return axios.post('/api/post/${data.postId}/comment', data);\r\n// }\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n        // const result = yield call(addPostAPI, action.data);\r\n        const id=shortid.generate();\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_POST_SUCCESS,\r\n            data: action.data,\r\n            //더미 data :data!\r\n        })\r\n        yield put({\r\n            type: ADD_POST_TO_ME,\r\n            data: action.data,\r\n        })\r\n    }\r\n    catch (err) {\r\n        yield put({\r\n            type: ADD_POST_FAILURE,\r\n            error: err.response.data,\r\n        })\r\n    }\r\n}\r\nfunction* addComment(action) {\r\n    try {\r\n        // const result = yield call(addCommentAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: ADD_COMMENT_SUCCESS,\r\n            //더미 data :data!\r\n            data: action.data,\r\n        })\r\n    }\r\n    catch (err) {\r\n        yield put({\r\n            type: ADD_COMMENT_FAILURE,\r\n            error: err.response.data,\r\n        })\r\n    }\r\n}\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchAddComment),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}