{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlals\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\node-bird\\\\pages\\\\profile.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport AppLayout from \"../components/appLayout\";\nimport Head from \"next/head\";\nimport NicknameEditForm from \"../components/nicknameEditForm\";\nimport FollowingList from \"../components/followingList\";\nimport FollowerList from \"../components/followerList\";\nimport { useSelector } from \"react-redux\";\nimport { useRouter } from 'next/router'; // 다른 페이지에 있는 Head는 _app의 Head를 덮어씌웁니다.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Profile = function Profile() {\n  _s();\n\n  var router = useRouter();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  useEffect(function () {\n    //로그아웃 했다면.\n    if (!(me && me.id)) {\n      router.push('/');\n    }\n  }, [me && me.id]);\n\n  if (!me) {\n    //로그인 되지 않았다면 안보이게\n    return null;\n  } // const followingList = [{ nickname: '제로초' }, { nickname: '바보' }, { nickname: '노드버드오피셜' }];\n  // const followerList = [{ nickname: '제로초' }, { nickname: '바보' }, { nickname: '노드버드오피셜' }];\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\\uB0B4 \\uD504\\uB85C\\uD544 | NodeBird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AppLayout, {\n      children: [/*#__PURE__*/_jsxDEV(NicknameEditForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FollowingList, {\n        header: \"\\uD314\\uB85C\\uC789\",\n        data: me.Followings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FollowerList, {\n        header: \"\\uD314\\uB85C\\uC6CC\",\n        data: me.Followers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Profile, \"XY7K5/Uh4IwwiIgt6UxeIxvken8=\", false, function () {\n  return [useRouter, useSelector];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/pages/profile.jsx"],"names":["React","useEffect","AppLayout","Head","NicknameEditForm","FollowingList","FollowerList","useSelector","useRouter","Profile","router","state","user","me","id","push","Followings","Followers"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACpB,MAAMC,MAAM,GAAGF,SAAS,EAAxB;;AACA,qBAAeD,WAAW,CAAC,UAAAI,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAA1B;AAAA,MAAQC,EAAR,gBAAQA,EAAR;;AACAZ,EAAAA,SAAS,CAAC,YAAM;AAAE;AAChB,QAAI,EAAEY,EAAE,IAAIA,EAAE,CAACC,EAAX,CAAJ,EAAoB;AAClBJ,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACD;AACF,GAJQ,EAIN,CAACF,EAAE,IAAIA,EAAE,CAACC,EAAV,CAJM,CAAT;;AAMA,MAAI,CAACD,EAAL,EAAS;AAAE;AACT,WAAO,IAAP;AACD,GAXmB,CAYpB;AACA;;;AACA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,QAAC,SAAD;AAAA,8BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,aAAD;AAAe,QAAA,MAAM,EAAC,oBAAtB;AAA4B,QAAA,IAAI,EAAEA,EAAE,CAACG;AAArC;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE,QAAC,YAAD;AAAc,QAAA,MAAM,EAAC,oBAArB;AAA2B,QAAA,IAAI,EAAEH,EAAE,CAACI;AAApC;AAAA;AAAA;AAAA;AAAA,eAHF;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF;AAAA,kBADF;AAYD,CA1BD;;GAAMR,O;UACWD,S,EACAD,W;;;KAFXE,O;AA4BN,eAAeA,OAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport AppLayout from \"../components/appLayout\";\r\nimport Head from \"next/head\";\r\nimport NicknameEditForm from \"../components/nicknameEditForm\";\r\nimport FollowingList from \"../components/followingList\";\r\nimport FollowerList from \"../components/followerList\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useRouter } from 'next/router'\r\n// 다른 페이지에 있는 Head는 _app의 Head를 덮어씌웁니다.\r\n\r\nconst Profile = () => {\r\n  const router = useRouter();\r\n  const { me } = useSelector(state => state.user);\r\n  useEffect(() => { //로그아웃 했다면.\r\n    if (!(me && me.id)) {\r\n      router.push('/');\r\n    }\r\n  }, [me && me.id]);\r\n\r\n  if (!me) { //로그인 되지 않았다면 안보이게\r\n    return null;\r\n  }\r\n  // const followingList = [{ nickname: '제로초' }, { nickname: '바보' }, { nickname: '노드버드오피셜' }];\r\n  // const followerList = [{ nickname: '제로초' }, { nickname: '바보' }, { nickname: '노드버드오피셜' }];\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>내 프로필 | NodeBird</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <NicknameEditForm />\r\n        <FollowingList header=\"팔로잉\" data={me.Followings} />\r\n        <FollowerList header=\"팔로워\" data={me.Followers} />\r\n      </AppLayout>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}