{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlals\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\node-bird\\\\components\\\\postCard.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { Card, Button, Popover, List, Comment } from \"antd\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from './postImages';\nimport CommentForm from './commentForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1]; //me?.id; 옵셔널체이닝 문법 me && me.id 동일 없으면 undefined 들어감\n\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); //내가 로그인 한 상태라면 me 가 존재.\n\n  var onToggleLike = useCallback(function () {\n    return setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    return setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 42\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96 \",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 27\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 27\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: function content() {\n          return /*#__PURE__*/_jsxDEV(Button.Group, {\n            children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                children: \"\\uC218\\uC815\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 41\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"danger\",\n                children: \"\\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 41\n              }, _this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC2E0\\uACE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 35\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, _this);\n        },\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 29\n        }, _this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          header: \"\".concat(post.Comments.length, \" \\uAC1C\\uC758 \\uB313\\uAE00\"),\n          itemLayout: \"horizontal\",\n          dataSource: post.Comments,\n          renderItem: function renderItem(item) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(Comment, {\n                author: item.User.nickname,\n                avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                  children: item.User.nickname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 53\n                }, _this),\n                content: item.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 41\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 37\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"bdrNUpTRpiSbLJZ60VfDe9W9ESI=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  //속성 자세하게 적어줄경우 shape 사용하자\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    User: PropTypes.object,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    //객체들의 배열 arrayOf\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/components/postCard.jsx"],"names":["React","useCallback","useState","Card","Button","Popover","List","Comment","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","useSelector","PropTypes","Avatar","PostImages","CommentForm","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","id","state","user","me","onToggleLike","prev","onToggleComment","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","string","object","arrayOf","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,EAAgCC,IAAhC,EAAsCC,OAAtC,QAAqD,MAArD;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,eAA1C,EAA2DC,eAA3D,EAA4EC,YAA5E,QAAgG,mBAAhG;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAC3B,kBAA0BjB,QAAQ,CAAC,KAAD,CAAlC;AAAA,MAAOkB,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAkDnB,QAAQ,CAAC,KAAD,CAA1D;AAAA,MAAOoB,iBAAP;AAAA,MAA0BC,oBAA1B,iBAF2B,CAG3B;;;AACA,MAAMC,EAAE,GAAGX,WAAW,CAAC,UAACY,KAAD;AAAA;;AAAA,6BAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;AAAA,GAAD,CAAtB,CAJ2B,CAK3B;;AACA,MAAMI,YAAY,GAAG3B,WAAW,CAAC;AAAA,WAAMoB,QAAQ,CAAC,UAACQ,IAAD;AAAA,aAAU,CAACA,IAAX;AAAA,KAAD,CAAd;AAAA,GAAD,EAAkC,EAAlC,CAAhC;AACA,MAAMC,eAAe,GAAG7B,WAAW,CAAC;AAAA,WAAMsB,oBAAoB,CAAC,UAAAM,IAAI;AAAA,aAAI,CAACA,IAAL;AAAA,KAAL,CAA1B;AAAA,GAAD,EAA4C,EAA5C,CAAnC;AACA,sBACI;AAAA,4BACI,QAAC,IAAD;AACI,MAAA,KAAK,EAAEV,IAAI,CAACY,MAAL,CAAY,CAAZ,kBAAkB,QAAC,UAAD;AAAY,QAAA,MAAM,EAAEZ,IAAI,CAACY;AAAzB;AAAA;AAAA;AAAA;AAAA,eAD7B;AAEI,MAAA,OAAO,EAAE,cACL,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,eADK,EAELX,KAAK,gBACC,QAAC,YAAD;AAAc,QAAA,YAAY,EAAC,UAA3B;AAAkD,QAAA,OAAO,EAAEQ;AAA3D,SAA0C,OAA1C;AAAA;AAAA;AAAA;AAAA,eADD,gBAEC,QAAC,aAAD;AAA2B,QAAA,OAAO,EAAEA;AAApC,SAAmB,OAAnB;AAAA;AAAA;AAAA;AAAA,eAJD,eAKL,QAAC,eAAD;AAA+B,QAAA,OAAO,EAAEE;AAAxC,SAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,eALK,eAML,QAAC,OAAD;AAAoB,QAAA,OAAO,EAAE;AAAA,8BACzB,QAAC,MAAD,CAAQ,KAAR;AAAA,sBACKN,EAAE,IAAIL,IAAI,CAACa,IAAL,CAAUR,EAAV,KAAiBA,EAAvB,gBAEO;AAAA,sCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAEI,QAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ;AAAA,4BAFP,gBAOK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARV;AAAA;AAAA;AAAA;AAAA,mBADyB;AAAA,SAA7B;AAAA,+BAcI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAdJ,SAAa,MAAb;AAAA;AAAA;AAAA;AAAA,eANK,CAFb;AAAA,6BA0BI,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,MAAM,eAAE,QAAC,MAAD;AAAA,oBAASL,IAAI,CAACa,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,iBADZ;AAEI,QAAA,KAAK,EAAEd,IAAI,CAACa,IAAL,CAAUC,QAFrB;AAGI,QAAA,WAAW,EAAEd,IAAI,CAACe;AAHtB;AAAA;AAAA;AAAA;AAAA;AA1BJ;AAAA;AAAA;AAAA;AAAA,aADJ,EAkCQZ,iBAAiB,iBACb;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEH,IAAnB;AAAA,+BACI,QAAC,IAAD;AACI,UAAA,MAAM,YAAKA,IAAI,CAACgB,QAAL,CAAcC,MAAnB,+BADV;AAEI,UAAA,UAAU,EAAC,YAFf;AAGI,UAAA,UAAU,EAAEjB,IAAI,CAACgB,QAHrB;AAII,UAAA,UAAU,EAAE,oBAAAE,IAAI;AAAA,gCACZ;AAAA,qCACI,QAAC,OAAD;AACI,gBAAA,MAAM,EAAEA,IAAI,CAACL,IAAL,CAAUC,QADtB;AAEI,gBAAA,MAAM,eAAE,QAAC,MAAD;AAAA,4BAASI,IAAI,CAACL,IAAL,CAAUC;AAAnB;AAAA;AAAA;AAAA;AAAA,yBAFZ;AAGI,gBAAA,OAAO,EAAEI,IAAI,CAACH;AAHlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,qBADY;AAAA;AAJpB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAnCZ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA0DH,CAlED;;GAAMhB,Q;UAISL,W;;;KAJTK,Q;AAmENA,QAAQ,CAACoB,SAAT,GAAqB;AACjB;AACAnB,EAAAA,IAAI,EAAEL,SAAS,CAACyB,KAAV,CAAgB;AAClBf,IAAAA,EAAE,EAAEV,SAAS,CAAC0B,MADI;AAElBN,IAAAA,OAAO,EAAEpB,SAAS,CAAC2B,MAFD;AAGlBT,IAAAA,IAAI,EAAElB,SAAS,CAAC4B,MAHE;AAIlBX,IAAAA,MAAM,EAAEjB,SAAS,CAAC6B,OAAV,CAAkB7B,SAAS,CAAC4B,MAA5B,CAJU;AAKlB;AACAP,IAAAA,QAAQ,EAAErB,SAAS,CAAC6B,OAAV,CAAkB7B,SAAS,CAAC4B,MAA5B;AANQ,GAAhB,EAOHE;AATc,CAArB;AAWA,eAAe1B,QAAf","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { Card, Button, Popover, List, Comment } from \"antd\";\r\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from '@ant-design/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport PostImages from './postImages';\r\nimport CommentForm from './commentForm';\r\nconst PostCard = ({ post }) => {\r\n    const [liked, setLiked] = useState(false);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    //me?.id; 옵셔널체이닝 문법 me && me.id 동일 없으면 undefined 들어감\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    //내가 로그인 한 상태라면 me 가 존재.\r\n    const onToggleLike = useCallback(() => setLiked((prev) => !prev), []);\r\n    const onToggleComment = useCallback(() => setCommentFormOpened(prev => !prev), []);\r\n    return (\r\n        <div>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    liked\r\n                        ? <HeartTwoTone twoToneColor=\"#eb2f96 \" key=\"heart\" onClick={onToggleLike} />\r\n                        : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n                    <Popover key=\"more\" content={() => (\r\n                        <Button.Group>\r\n                            {id && post.User.id === id\r\n                                ? (\r\n                                    <>\r\n                                        <Button>수정</Button>\r\n                                        <Button type=\"danger\">삭제</Button>\r\n                                    </>\r\n                                )\r\n                                : <Button>신고</Button>\r\n                            }\r\n                        </Button.Group>\r\n                    )\r\n                    }>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={post.content}\r\n                />\r\n            </Card>\r\n            {\r\n                commentFormOpened && (\r\n                    <div>\r\n                        <CommentForm post={post}>\r\n                            <List\r\n                                header={`${post.Comments.length} 개의 댓글`}\r\n                                itemLayout=\"horizontal\"\r\n                                dataSource={post.Comments}\r\n                                renderItem={item => (\r\n                                    <li>\r\n                                        <Comment\r\n                                            author={item.User.nickname}\r\n                                            avatar={<Avatar>{item.User.nickname}</Avatar>}\r\n                                            content={item.content}\r\n                                        />\r\n                                    </li>\r\n                                )}\r\n                            />\r\n                        </CommentForm>\r\n                    </div>\r\n                )\r\n            }\r\n        </div >\r\n    )\r\n}\r\nPostCard.propTypes = {\r\n    //속성 자세하게 적어줄경우 shape 사용하자\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        content: PropTypes.string,\r\n        User: PropTypes.object,\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n        //객체들의 배열 arrayOf\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}