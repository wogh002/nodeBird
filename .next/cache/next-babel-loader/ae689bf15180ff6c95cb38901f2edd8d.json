{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(logIn),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(logOut),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(signUp),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(follow),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogIn),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogOut),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchSignUp),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchFollow),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE } from '../reducers/user'; // 제너레이터 아님 주의(X)\n// const logInAPI = (data) => {\n//     return axios.post('/api/login', data);\n// };\n// const logOutAPI = () => {\n//     return axios.post('/api/logout');\n// }\n//const signUpAPI = ()=>{\n//return axios.post('/api/signUp');\n//}\n\nfunction logIn(action) {\n  return _regeneratorRuntime.wrap(function logIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context.next = 5;\n          return put({\n            type: LOG_IN_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context.next = 11;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put({\n            type: LOG_IN_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}\n\nfunction logOut() {\n  return _regeneratorRuntime.wrap(function logOut$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context2.next = 5;\n          return put({\n            type: LOG_OUT_SUCCESS\n          });\n\n        case 5:\n          _context2.next = 11;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 11;\n          return put({\n            type: LOG_OUT_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 7]]);\n}\n\nfunction signUp(action) {\n  return _regeneratorRuntime.wrap(function signUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: SIGN_UP_SUCCESS,\n            data: action.data // data: result.data,\n\n          });\n\n        case 5:\n          _context3.next = 11;\n          break;\n\n        case 7:\n          _context3.prev = 7;\n          _context3.t0 = _context3[\"catch\"](0);\n          _context3.next = 11;\n          return put({\n            type: SIGN_UP_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 7]]);\n}\n\nfunction follow(action) {\n  return _regeneratorRuntime.wrap(function follow$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return delay(1000);\n\n        case 3:\n          _context4.next = 5;\n          return put({\n            type: FOLLOW_SUCCESS,\n            data: action.data\n          });\n\n        case 5:\n          _context4.next = 11;\n          break;\n\n        case 7:\n          _context4.prev = 7;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 11;\n          return put({\n            type: FOLLOW_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 11:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 7]]);\n} //비동기 액션 크리에이터 (이벤트리스너 처럼 생각)\n\n\nfunction watchLogIn() {\n  return _regeneratorRuntime.wrap(function watchLogIn$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(LOG_IN_REQUEST, logIn);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchLogOut() {\n  return _regeneratorRuntime.wrap(function watchLogOut$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(LOG_OUT_REQUEST, logOut);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchSignUp() {\n  return _regeneratorRuntime.wrap(function watchSignUp$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(SIGN_UP_REQUEST, signUp);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchFollow() {\n  return _regeneratorRuntime.wrap(function watchFollow$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchFollow)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/sagas/user.js"],"names":["logIn","logOut","signUp","follow","watchLogIn","watchLogOut","watchSignUp","watchFollow","userSaga","all","fork","put","takeLatest","delay","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","FOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","action","type","data","error","response"],"mappings":"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","sourcesContent":["import { all, fork, put, takeLatest, delay } from 'redux-saga/effects';\r\nimport {\r\n    LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE,\r\n    LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE,\r\n    SIGN_UP_REQUEST, SIGN_UP_SUCCESS, SIGN_UP_FAILURE,\r\n    FOLLOW_REQUEST, FOLLOW_SUCCESS, FOLLOW_FAILURE,\r\n    UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, UNFOLLOW_FAILURE,\r\n} from '../reducers/user';\r\n\r\n// 제너레이터 아님 주의(X)\r\n// const logInAPI = (data) => {\r\n//     return axios.post('/api/login', data);\r\n// };\r\n// const logOutAPI = () => {\r\n//     return axios.post('/api/logout');\r\n// }\r\n//const signUpAPI = ()=>{\r\n//return axios.post('/api/signUp');\r\n//}\r\nfunction* logIn(action) {\r\n    //login요청 실패염려 때문에 try{} catch();\r\n    try {\r\n        // const result = yield call(loginAPI, action.data);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_IN_SUCCESS,\r\n            data: action.data\r\n        });\r\n    }\r\n    catch (err) {\r\n        yield put({\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }\r\n}\r\nfunction* logOut() {\r\n    try {\r\n        // const result = yield call(logOutAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: LOG_OUT_SUCCESS,\r\n        });\r\n    }\r\n    catch (err) {\r\n        yield put({\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n        // const result = yield call(signUpAPI);\r\n        yield delay(1000);\r\n        yield put({\r\n            type: SIGN_UP_SUCCESS,\r\n            data: action.data,\r\n            // data: result.data,\r\n        });\r\n    }\r\n    catch (err) {\r\n        yield put({\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n        yield delay(1000);\r\n        yield put({\r\n            type: FOLLOW_SUCCESS,\r\n            data: action.data,\r\n        });\r\n    }\r\n    catch (err) {\r\n        yield put({\r\n            type: FOLLOW_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n//비동기 액션 크리에이터 (이벤트리스너 처럼 생각)\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST, logOut);\r\n}\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST, signUp);\r\n}\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n\r\n}\r\nexport default function* userSaga() {\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n        fork(watchFollow),\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}