{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst initialState = {\n  name: 'zerocho',\n  age: 27,\n  password: 'babo'\n}; //노예 생성함수\n\nconst changeNickname = data => ({\n  type: \"CHANGE_NICKNAME\",\n  data\n}); //reducer는 (이전상태,액션)=>return 다음상태\n\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'CHANGE_NICKNAME':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.data\n      });\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/reducers/index.js"],"names":["initialState","name","age","password","changeNickname","data","type","rootReducer","state","action"],"mappings":";;;;;;AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,SADW;AAEjBC,EAAAA,GAAG,EAAE,EAFY;AAGjBC,EAAAA,QAAQ,EAAE;AAHO,CAArB,C,CAKA;;AACA,MAAMC,cAAc,GAAGC,IAAI,KAAK;AAAEC,EAAAA,IAAI,EAAE,iBAAR;AAA2BD,EAAAA;AAA3B,CAAL,CAA3B,C,CAGA;;;AACA,MAAME,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACH,IAAf;AACI,SAAK,iBAAL;AACI,6CACOE,KADP;AAEIP,QAAAA,IAAI,EAAEQ,MAAM,CAACJ;AAFjB;AAFR;AAOH,CARD;;AASA,eAAeE,WAAf","sourcesContent":["const initialState = {\r\n    name: 'zerocho',\r\n    age: 27,\r\n    password: 'babo'\r\n}\r\n//노예 생성함수\r\nconst changeNickname = data => ({ type: \"CHANGE_NICKNAME\", data });\r\n\r\n\r\n//reducer는 (이전상태,액션)=>return 다음상태\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_NICKNAME':\r\n            return {\r\n                ...state,\r\n                name: action.data\r\n            }\r\n    }\r\n};\r\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}