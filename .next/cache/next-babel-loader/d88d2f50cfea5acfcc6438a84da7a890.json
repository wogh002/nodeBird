{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst dummyPost = {\n  id: 2,\n  //게시글 id\n  content: '더미데이터',\n  //게시글 내용\n  User: {\n    //게시글 쓴 유저 정보\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [{\n    src: 'https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyMTA3MzBfODMg%2FMDAxNjI3NjExMjY2NTc4.6y1YAkF-z652ZcMud-GPwH3JimVpuMSLBCwxNZ77NDgg.G2mlr1CY_cGxdszrCWU7sQAWDwmZjelpBCbskEh3zv8g.JPEG.hdglbys%2F21%25A3%25AD07%25A3%25AD30%25A3%25AD09%25A3%25AD37%25A3%25AD52%25A3%25AD877%25A3%25DFdeco.jpg&type=a340'\n  }],\n  Comments: []\n}; //노예이름\n\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\"; //노예 생성함수\n//동적으로 생성하는건 재사용가능성이 높은것들.\n\nexport const addPostRequestAction = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addCommentRequestAction = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\nexport const initalState = {\n  //더미데이터를 만들자 \n  // 서버쪽에서 데이터를 나한테 어떻게 보낼건지 미리 물어보자.\n  //id content 이런건 소문자인데  -> 게시글(post)자체의 속성\n  //User,Images,Comments 는 왜 대문자냐?\n  //DB 시퀄라이즈랑 관계가 있음 \n  //id content 는 게시글 자체의 속성이다.\n  //User,Images,Comments 정보(post) 와 다른정보와의 관계가 있으면 대문자로\n  mainPosts: [{\n    //게시글의 id ,내용\n    id: 1,\n    content: \"첫 번째 게시글 #해시태그 #익스프레스\",\n    User: {\n      //게시글 작성자의 정보 -> id ,닉네임 \n      id: 'ekem159',\n      nickname: '제로초'\n    },\n    Images: [{\n      src: 'https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyMTA3MzBfODMg%2FMDAxNjI3NjExMjY2NTc4.6y1YAkF-z652ZcMud-GPwH3JimVpuMSLBCwxNZ77NDgg.G2mlr1CY_cGxdszrCWU7sQAWDwmZjelpBCbskEh3zv8g.JPEG.hdglbys%2F21%25A3%25AD07%25A3%25AD30%25A3%25AD09%25A3%25AD37%25A3%25AD52%25A3%25AD877%25A3%25DFdeco.jpg&type=a340'\n    }, {\n      src: 'https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyMTA3MzBfODMg%2FMDAxNjI3NjExMjY2NTc4.6y1YAkF-z652ZcMud-GPwH3JimVpuMSLBCwxNZ77NDgg.G2mlr1CY_cGxdszrCWU7sQAWDwmZjelpBCbskEh3zv8g.JPEG.hdglbys%2F21%25A3%25AD07%25A3%25AD30%25A3%25AD09%25A3%25AD37%25A3%25AD52%25A3%25AD877%25A3%25DFdeco.jpg&type=a340'\n    }, {\n      src: 'https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyMTA3MzBfODMg%2FMDAxNjI3NjExMjY2NTc4.6y1YAkF-z652ZcMud-GPwH3JimVpuMSLBCwxNZ77NDgg.G2mlr1CY_cGxdszrCWU7sQAWDwmZjelpBCbskEh3zv8g.JPEG.hdglbys%2F21%25A3%25AD07%25A3%25AD30%25A3%25AD09%25A3%25AD37%25A3%25AD52%25A3%25AD877%25A3%25DFdeco.jpg&type=a340'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '우와 개정판이 나왔군요~'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '얼른  !!!! 사고싶어요~!'\n    }]\n  }],\n  //이미지 업로드하면 경로 쌓임 imagePaths 에 \n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\n\nconst reducer = (state = initalState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addPostLoading: true,\n          addPostDone: false,\n          addPostError: null\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        //더미데이터 클라->서버 요청하고 응답의 값\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentDone: true\n      });\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/reducers/post.js"],"names":["dummyPost","id","content","User","nickname","Images","src","Comments","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPostRequestAction","data","type","addCommentRequestAction","initalState","mainPosts","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","reducer","state","action","error"],"mappings":"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","sourcesContent":["const dummyPost = {\r\n    id: 2, //게시글 id\r\n    content: '더미데이터', //게시글 내용\r\n    User: { //게시글 쓴 유저 정보\r\n        id: 1,\r\n        nickname: '제로초',\r\n    },\r\n    Images: [{ src: 'https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyMTA3MzBfODMg%2FMDAxNjI3NjExMjY2NTc4.6y1YAkF-z652ZcMud-GPwH3JimVpuMSLBCwxNZ77NDgg.G2mlr1CY_cGxdszrCWU7sQAWDwmZjelpBCbskEh3zv8g.JPEG.hdglbys%2F21%25A3%25AD07%25A3%25AD30%25A3%25AD09%25A3%25AD37%25A3%25AD52%25A3%25AD877%25A3%25DFdeco.jpg&type=a340' }],\r\n    Comments: [],\r\n}\r\n\r\n//노예이름\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\n//노예 생성함수\r\n//동적으로 생성하는건 재사용가능성이 높은것들.\r\nexport const addPostRequestAction = (data) => ({ type: ADD_POST_REQUEST, data });\r\nexport const addCommentRequestAction = (data) => ({ type: ADD_COMMENT_REQUEST, data });\r\n\r\nexport const initalState = {\r\n    //더미데이터를 만들자 \r\n    // 서버쪽에서 데이터를 나한테 어떻게 보낼건지 미리 물어보자.\r\n    //id content 이런건 소문자인데  -> 게시글(post)자체의 속성\r\n    //User,Images,Comments 는 왜 대문자냐?\r\n    //DB 시퀄라이즈랑 관계가 있음 \r\n    //id content 는 게시글 자체의 속성이다.\r\n    //User,Images,Comments 정보(post) 와 다른정보와의 관계가 있으면 대문자로\r\n    mainPosts: [{\r\n        //게시글의 id ,내용\r\n        id: 1,\r\n        content: \"첫 번째 게시글 #해시태그 #익스프레스\",\r\n        User: {\r\n            //게시글 작성자의 정보 -> id ,닉네임 \r\n            id: 'ekem159',\r\n            nickname: '제로초',\r\n        },\r\n        Images: [\r\n            {\r\n                src: 'https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyMTA3MzBfODMg%2FMDAxNjI3NjExMjY2NTc4.6y1YAkF-z652ZcMud-GPwH3JimVpuMSLBCwxNZ77NDgg.G2mlr1CY_cGxdszrCWU7sQAWDwmZjelpBCbskEh3zv8g.JPEG.hdglbys%2F21%25A3%25AD07%25A3%25AD30%25A3%25AD09%25A3%25AD37%25A3%25AD52%25A3%25AD877%25A3%25DFdeco.jpg&type=a340',\r\n            },\r\n            {\r\n                src: 'https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyMTA3MzBfODMg%2FMDAxNjI3NjExMjY2NTc4.6y1YAkF-z652ZcMud-GPwH3JimVpuMSLBCwxNZ77NDgg.G2mlr1CY_cGxdszrCWU7sQAWDwmZjelpBCbskEh3zv8g.JPEG.hdglbys%2F21%25A3%25AD07%25A3%25AD30%25A3%25AD09%25A3%25AD37%25A3%25AD52%25A3%25AD877%25A3%25DFdeco.jpg&type=a340',\r\n            },\r\n            {\r\n                src: 'https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyMTA3MzBfODMg%2FMDAxNjI3NjExMjY2NTc4.6y1YAkF-z652ZcMud-GPwH3JimVpuMSLBCwxNZ77NDgg.G2mlr1CY_cGxdszrCWU7sQAWDwmZjelpBCbskEh3zv8g.JPEG.hdglbys%2F21%25A3%25AD07%25A3%25AD30%25A3%25AD09%25A3%25AD37%25A3%25AD52%25A3%25AD877%25A3%25DFdeco.jpg&type=a340',\r\n            }\r\n        ],\r\n        Comments: [\r\n            {\r\n                User: {\r\n                    nickname: 'nero',\r\n                },\r\n                content: '우와 개정판이 나왔군요~',\r\n            },\r\n            {\r\n                User: {\r\n                    nickname: 'hero',\r\n                },\r\n                content: '얼른  !!!! 사고싶어요~!',\r\n            }\r\n        ]\r\n    }],\r\n    //이미지 업로드하면 경로 쌓임 imagePaths 에 \r\n    imagePaths: [],\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n\r\n}\r\n\r\nconst reducer = (state = initalState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST_REQUEST: {\r\n            return {\r\n                ...state,\r\n                addPostLoading: true,\r\n                addPostDone: false,\r\n                addPostError: null,\r\n            }\r\n        }\r\n        case ADD_POST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                //더미데이터 클라->서버 요청하고 응답의 값\r\n                mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n                addPostLoading: false,\r\n                addPostDone: true,\r\n            }\r\n        case ADD_POST_FAILURE:\r\n            return {\r\n                ...state,\r\n                addPostLoading: false,\r\n                addPostError: action.error\r\n            }\r\n\r\n        case ADD_COMMENT_REQUEST:\r\n            return {\r\n                ...state,\r\n                addCommentLoading: true,\r\n                addCommentDone: false,\r\n                addCommentError: null,\r\n            }\r\n\r\n        case ADD_COMMENT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                addCommentLoading: false,\r\n                addCommentDone: true,\r\n            }\r\n        case ADD_COMMENT_FAILURE:\r\n            return {\r\n                ...state,\r\n                addCommentLoading: false,\r\n                addCommentError: action.error\r\n            }\r\n        default: return state;\r\n    }\r\n\r\n\r\n}\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}