{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlals\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\node-bird\\\\components\\\\postCard.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, Button, Popover } from \"antd\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport PostImages from './postImages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1]; //me?.id; 옵셔널체이닝 문법 me && me.id 동일 없으면 undefined 들어감\n\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  }); //내가 로그인 한 상태라면 me 가 존재.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 42\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 27\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {}, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 27\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 41\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 41\n            }, _this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 35\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, _this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, _this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"jl0v4CYAMSMd8SVe4SymEl8Ql2U=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  //속성 자세하게 적어줄경우 shape 사용하자\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    User: PropTypes.object,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    //객체들의 배열 arrayOf\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/components/postCard.jsx"],"names":["React","useState","Card","Button","Popover","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","useSelector","PropTypes","Avatar","PostImages","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","id","state","user","me","Images","onToggleLike","User","nickname","content","propTypes","shape","number","string","object","arrayOf","Comments","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Card, Button, Popover } from \"antd\";\r\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from '@ant-design/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from 'antd/lib/avatar/avatar';\r\nimport PostImages from './postImages';\r\nconst PostCard = ({ post }) => {\r\n    const [liked, setLiked] = useState(false);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    //me?.id; 옵셔널체이닝 문법 me && me.id 동일 없으면 undefined 들어감\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    //내가 로그인 한 상태라면 me 가 존재.\r\n    return (\r\n        <div>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    liked\r\n                        ? <HeartTwoTone key=\"heart\" onClick={onToggleLike} />\r\n                        : <HeartOutlined key=\"heart\" />,\r\n                    <MessageOutlined key=\"comment\" />,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            {id && post.User.id === id\r\n                                ? (\r\n                                    <>\r\n                                        <Button>수정</Button>\r\n                                        <Button type=\"danger\">삭제</Button>\r\n                                    </>\r\n                                )\r\n                                : <Button>신고</Button>\r\n                            }\r\n                        </Button.Group>\r\n                    )\r\n                    }>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={post.content}\r\n                />\r\n            </Card>\r\n            {/* <CommentForm />\r\n            <Comments /> */}\r\n        </div >\r\n    )\r\n}\r\nPostCard.propTypes = {\r\n    //속성 자세하게 적어줄경우 shape 사용하자\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        content: PropTypes.string,\r\n        User: PropTypes.object,\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n        //객체들의 배열 arrayOf\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}