{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlals\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\node-bird\\\\components\\\\userProfile.jsx\";\nimport React, { useCallback } from \"react\";\nimport { Card, Avatar, Button } from 'antd';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutRequestAction } from \"../reducers/user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserProfile = () => {\n  const dispatch = useDispatch(); //액션이 스토어로 dispatch 될 때 마다 selector 함수는 재실행 된다  \n\n  const {\n    me,\n    logOutLoading\n  } = useSelector(state => state.user);\n  const onLogOut = useCallback(() => dispatch(logoutRequestAction()), []); //리액트에서 배열안에 jsx 사용시 key 값 필수\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    actions: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uC9F9\\uC9F9 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 32\n      }, this), me.Posts.length]\n    }, \"twit\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD314\\uB85C\\uC789\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 38\n      }, this), me.Followings.length]\n    }, \"followings\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \\uD314\\uB85C\\uC6CC \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 39\n      }, this), me.Followers.length]\n    }, \"followers\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)],\n    children: [/*#__PURE__*/_jsxDEV(Card.Meta, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        children: me.nickname[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this),\n      title: me.nickname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: onLogOut,\n      loading: logOutLoading,\n      children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\nexport default UserProfile;","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/components/userProfile.jsx"],"names":["React","useCallback","Card","Avatar","Button","useDispatch","useSelector","logoutRequestAction","UserProfile","dispatch","me","logOutLoading","state","user","onLogOut","Posts","length","Followings","Followers","nickname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,MAArC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;;;AACA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B,CADsB,CAEtB;;AACA,QAAM;AAAEK,IAAAA,EAAF;AAAMC,IAAAA;AAAN,MAAwBL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAzC;AAEA,QAAMC,QAAQ,GAAGb,WAAW,CAAC,MAAMQ,QAAQ,CAACF,mBAAmB,EAApB,CAAf,EAAwC,EAAxC,CAA5B,CALsB,CAMtB;;AACA,sBACI,QAAC,IAAD;AAAM,IAAA,OAAO,EAAE,cACX;AAAA,+CAAmB;AAAA;AAAA;AAAA;AAAA,cAAnB,EAA0BG,EAAE,CAACK,KAAH,CAASC,MAAnC;AAAA,OAAS,MAAT;AAAA;AAAA;AAAA;AAAA,YADW,eAEX;AAAA,oDAAyB;AAAA;AAAA;AAAA;AAAA,cAAzB,EAAgCN,EAAE,CAACO,UAAH,CAAcD,MAA9C;AAAA,OAAS,YAAT;AAAA;AAAA;AAAA;AAAA,YAFW,eAGX;AAAA,sDAA0B;AAAA;AAAA;AAAA;AAAA,cAA1B,EAAiCN,EAAE,CAACQ,SAAH,CAAaF,MAA9C;AAAA,OAAS,WAAT;AAAA;AAAA;AAAA;AAAA,YAHW,CAAf;AAAA,4BAKI,QAAC,IAAD,CAAM,IAAN;AACI,MAAA,MAAM,eACF,QAAC,MAAD;AAAA,kBAASN,EAAE,CAACS,QAAH,CAAY,CAAZ;AAAT;AAAA;AAAA;AAAA;AAAA,cAFR;AAII,MAAA,KAAK,EAAET,EAAE,CAACS;AAJd;AAAA;AAAA;AAAA;AAAA,YALJ,eAWI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEL,QAAjB;AAA2B,MAAA,OAAO,EAAEH,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAtBD;;AAwBA,eAAeH,WAAf","sourcesContent":["import React, { useCallback } from \"react\";\r\nimport { Card, Avatar, Button } from 'antd';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logoutRequestAction } from \"../reducers/user\";\r\nconst UserProfile = () => {\r\n    const dispatch = useDispatch();\r\n    //액션이 스토어로 dispatch 될 때 마다 selector 함수는 재실행 된다  \r\n    const { me, logOutLoading } = useSelector((state) => state.user);\r\n\r\n    const onLogOut = useCallback(() => dispatch(logoutRequestAction()), []);\r\n    //리액트에서 배열안에 jsx 사용시 key 값 필수\r\n    return (\r\n        <Card actions={[\r\n            <div key=\"twit\">짹짹 <br />{me.Posts.length}</div>,\r\n            <div key=\"followings\">팔로잉<br />{me.Followings.length}</div>,\r\n            <div key=\"followers\"> 팔로워 <br />{me.Followers.length}</div>,\r\n        ]}>\r\n            <Card.Meta\r\n                avatar={\r\n                    <Avatar>{me.nickname[0]}</Avatar>\r\n                }\r\n                title={me.nickname}\r\n            />\r\n            <Button onClick={onLogOut} loading={logOutLoading}>로그아웃</Button>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default UserProfile;\r\n"]},"metadata":{},"sourceType":"module"}