{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dlals\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\node-bird\\\\components\\\\postCard.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport { Card, Button, Popover, List, Comment, Avatar } from \"antd\";\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostImages from './postImages';\nimport CommentForm from './commentForm';\nimport PostCardContent from './postCardContent';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1]; //me?.id; 옵셔널체이닝 문법 me && me.id 동일 없으면 undefined 들어감\n\n\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading; //내가 로그인 한 상태라면 me 가 존재.\n\n\n  var onToggleLike = useCallback(function () {\n    return setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    return setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 42\n      }, _this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, _this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96 \",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 27\n      }, _this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 27\n      }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: function content() {\n          return /*#__PURE__*/_jsxDEV(Button.Group, {\n            children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                children: \"\\uC218\\uC815\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 41\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"danger\",\n                loading: removePostLoading,\n                onClick: onRemovePost,\n                children: \"\\uC0AD\\uC81C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, _this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC2E0\\uACE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 35\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, _this);\n        },\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, _this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, _this)],\n      children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, _this),\n        title: post.User.nickname,\n        description: /*#__PURE__*/_jsxDEV(PostCardContent, {\n          postData: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 34\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, _this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CommentForm, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(List, {\n        header: \"\".concat(post.Comments.length, \" \\uAC1C\\uC758 \\uB313\\uAE00\"),\n        itemLayout: \"horizontal\",\n        dataSource: post.Comments,\n        renderItem: function renderItem(item) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Comment, {\n              author: item.User.nickname,\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: item.User.nickname[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 45\n              }, _this),\n              content: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"QAKM0woin01E6sfzW//Gv6udQas=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  //속성 자세하게 적어줄경우 shape 사용하자\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    User: PropTypes.object,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    //객체들의 배열 arrayOf\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["C:/Users/dlals/OneDrive/바탕 화면/node-bird/components/postCard.jsx"],"names":["React","useCallback","useState","Card","Button","Popover","List","Comment","Avatar","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","useDispatch","useSelector","PropTypes","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","PostCard","post","dispatch","liked","setLiked","commentFormOpened","setCommentFormOpened","id","state","user","me","removePostLoading","onToggleLike","prev","onToggleComment","onRemovePost","type","data","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","string","object","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { Card, Button, Popover, List, Comment, Avatar } from \"antd\";\r\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport PostImages from './postImages';\r\nimport CommentForm from './commentForm';\r\nimport PostCardContent from './postCardContent';\r\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\r\nconst PostCard = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [liked, setLiked] = useState(false);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    //me?.id; 옵셔널체이닝 문법 me && me.id 동일 없으면 undefined 들어감\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const { removePostLoading } = useSelector(state => state.post);\r\n    //내가 로그인 한 상태라면 me 가 존재.\r\n    const onToggleLike = useCallback(() => setLiked((prev) => !prev), []);\r\n    const onToggleComment = useCallback(() => setCommentFormOpened(prev => !prev), []);\r\n    const onRemovePost = useCallback(() => {\r\n        dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id,\r\n        })\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    liked\r\n                        ? <HeartTwoTone twoToneColor=\"#eb2f96 \" key=\"heart\" onClick={onToggleLike} />\r\n                        : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\r\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment} />,\r\n                    <Popover key=\"more\" content={() => (\r\n                        <Button.Group>\r\n                            {/* 수정,삭제 버튼 보이려면 로그인해야되고  게시글 작성한 유저가 같아야함 */}\r\n                            {id && post.User.id === id\r\n                                ? (\r\n                                    <>\r\n                                        <Button>수정</Button>\r\n                                        {/* REMOVE_POST_REQUEST data : post.id */}\r\n                                        <Button type=\"danger\" loading={removePostLoading} onClick={onRemovePost}>삭제</Button>\r\n                                    </>\r\n                                )\r\n                                : <Button>신고</Button>\r\n                            }\r\n                        </Button.Group>\r\n                    )\r\n                    }>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={<PostCardContent postData={post.content} />}\r\n                />\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <div>\r\n                    <CommentForm post={post} />\r\n                    <List\r\n                        header={`${post.Comments.length} 개의 댓글`}\r\n                        itemLayout=\"horizontal\"\r\n                        dataSource={post.Comments}\r\n                        renderItem={item => (\r\n                            <li>\r\n                                <Comment\r\n                                    author={item.User.nickname}\r\n                                    avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                    content={item.content}\r\n                                />\r\n                            </li>\r\n                        )}\r\n                    />\r\n                </div>\r\n            )}\r\n        </div >\r\n    )\r\n}\r\nPostCard.propTypes = {\r\n    //속성 자세하게 적어줄경우 shape 사용하자\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        content: PropTypes.string,\r\n        User: PropTypes.object,\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n        //객체들의 배열 arrayOf\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n}\r\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}